---
- name: kubeadm init
  command: "kubeadm init --apiserver-advertise-address={{ ansible_default_ipv4.address }} --pod-network-cidr=10.244.0.0/16"
  retries: 2
  delay: 2
  args:
    creates: /etc/kubernetes/kubelet.conf
- name: fetch k8s config
  fetch:
    dest: build/k8s-config.yaml
    flat: yes
    src: /etc/kubernetes/admin.conf
- name: apply flannel
  changed_when: "'created' in flannel_up.stdout or 'configured' in flannel_up.stdout"
  register: flannel_up
  shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf apply --filename=https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
- name: register k8s token
  changed_when: false
  shell: kubeadm token list | awk 'NR == 2 { print $1 }'
  register: k8s_token
- name: save k8s token
  local_action:
    module: copy
    content: "{{ k8s_token.stdout }}\n"
    dest: build/k8s-token
  vars:
    ansible_become: no
- name: apply post-master-up hooks
  changed_when: "'created' in post_master_up.stdout or 'configured' in post_master_up.stdout"
  local_action:
    module: 'command kubectl --kubeconfig=build/k8s-config.yaml apply --filename=hooks/{{ item }}.yaml'
    removes: 'hooks/{{ item }}.yaml' # it doesn't, but it prevents this step from running if it is
  register: post_master_up
  vars:
    ansible_become: no
  with_items:
    - k8s-post-master-up
    - post-master-up
- name: Deploy kubernetes dashboard into cluster
  command: |
    kubectl --kubeconfig=/etc/kubernetes/admin.conf \
        apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml
  register: create_result
  until: create_result.rc == 0
  retries: 2
  delay: 2
  ignore_errors: true
- name: Create k8s dashboard service account
  shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf create serviceaccount dashboard-admin-sa
- name: Bind service account to admin cluster role
  shell: kubectl create clusterrolebinding dashboard-admin-sa --clusterrole=cluster-admin --serviceaccount=default:dashboard-admin-sa
- name: Echo token
  shell: dashboard-admin-sa-token=$(kubectl get secret dashboard-admin-sa-token -o jsonpath="{.data.<DATA>}" | base64 --decode)
- debug:
    msg: "Auth token for the dashboard is: {{dashboard-admin-sa-token}}"
- name: Delete flannel 1 ip link # just for fixing the kube-flannel-ds-arm pod
  shell: ip link delete flannel.1